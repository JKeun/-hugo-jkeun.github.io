<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jnotes</title>
    <link>https://jkeun.github.io/index.xml</link>
    <description>Recent content on jnotes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <copyright>Copyright(c)2016 JKEUN All rights reserved.</copyright>
    <lastBuildDate>Fri, 14 Oct 2016 12:48:34 +0900</lastBuildDate>
    <atom:link href="https://jkeun.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>about</title>
      <link>https://jkeun.github.io/about/</link>
      <pubDate>Fri, 14 Oct 2016 12:48:34 +0900</pubDate>
      
      <guid>https://jkeun.github.io/about/</guid>
      <description>

&lt;h1 id=&#34;jay&#34;&gt;Jay&lt;/h1&gt;

&lt;p&gt;Man who enjoys studying  Data Sciecne, Statistics and Web Development.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;skills&#34;&gt;skills&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Data Science, Machine Learning, Python, SQL, NoSQL, mongodb, Node.js&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;projects&#34;&gt;projects&lt;/h2&gt;

&lt;h3 id=&#34;1-personal-movie-rating-sys&#34;&gt;1. Personal Movie Rating Sys&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Predicted rating of movies ( rating is 0 to 5 )&lt;/li&gt;
&lt;li&gt;Used &lt;em&gt;Multinomial Naive Bayes&lt;/em&gt; and &lt;em&gt;Gaussian Navie Bayes&lt;/em&gt; model&lt;/li&gt;
&lt;li&gt;Crawled data from Watcha.net&lt;/li&gt;
&lt;li&gt;One Standard Error Rule&lt;/li&gt;
&lt;li&gt;Result

&lt;ul&gt;
&lt;li&gt;twice better than Watcha&amp;rsquo;s rating system&lt;/li&gt;
&lt;li&gt;mae score is 0.25 (Watcha&amp;rsquo;s is 0.48)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Repo

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JKeun/project-02-watcha&#34;&gt;github.com/JKeun/project-02-watcha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-find-my-job&#34;&gt;2. Find my job&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Matching your job when you input your personality and skills&lt;/li&gt;
&lt;li&gt;Classes are &amp;ldquo;Data Scientist&amp;rdquo;, &amp;ldquo;Digital Marketer&amp;rdquo;, &amp;ldquo;UX/UI Designer&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Used &lt;em&gt;Multinomial Naive Bayes&lt;/em&gt; and &lt;em&gt;SGD&lt;/em&gt; model&lt;/li&gt;
&lt;li&gt;Crawled data from linkedin&lt;/li&gt;
&lt;li&gt;One Standard Error Rule&lt;/li&gt;
&lt;li&gt;Words-cloud&lt;/li&gt;
&lt;li&gt;Repo

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JKeun/project-01-findmyjob&#34;&gt;github.com/JKeun/project-01-findmyjob&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;exprience&#34;&gt;exprience&lt;/h2&gt;

&lt;h3 id=&#34;1-fast-campus-seoul-korea-apr-2016&#34;&gt;1. Fast Campus, Seoul, Korea (Apr. 2016 ~ )&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Course Manger&lt;/li&gt;
&lt;li&gt;Manage Data Science School&lt;/li&gt;
&lt;li&gt;Communicate with teachers &amp;amp; students&lt;/li&gt;
&lt;li&gt;Build up a system of course&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-hanjin-seoul-korea-aug-2015-aug-2015&#34;&gt;2. HanJin, Seoul, Korea (Aug. 2015 - Aug. 2015)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Internship&lt;/li&gt;
&lt;li&gt;Managed warehouse &amp;amp; invnetory&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-korean-airline-hongkong-jan-2015-feb-2015&#34;&gt;3. Korean Airline, HongKong (Jan. 2015 - Feb. 2015)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Internship&lt;/li&gt;
&lt;li&gt;Managed air cargo &amp;amp; schedule&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;education&#34;&gt;education&lt;/h2&gt;

&lt;h3 id=&#34;korean-aerospace-university-seoul-korea-mar-2009-feb-2016&#34;&gt;Korean Aerospace University, Seoul, Korea (Mar. 2009 - Feb. 2016)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Majored in Logistics and SCM&lt;/li&gt;
&lt;li&gt;GPA 4.19 / 4.5&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Development Environment Setting</title>
      <link>https://jkeun.github.io/post/python-dev-env-setting/</link>
      <pubDate>Thu, 13 Oct 2016 19:19:27 +0900</pubDate>
      
      <guid>https://jkeun.github.io/post/python-dev-env-setting/</guid>
      <description>

&lt;h1 id=&#34;데이터-분석-개발-환경-python-v2-7-11&#34;&gt;데이터 분석 개발 환경 ( python v2.7.11 )&lt;/h1&gt;

&lt;p&gt;파이썬 개발환경 및 패키지 관리 자동화를 위한 세팅&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;pyenv-virtualenv&#34;&gt;pyenv + virtualenv&lt;/h2&gt;

&lt;p&gt;pyenv 는 파이썬 2.7, 3.11 을 자유롭게 오가며 사용할 수 있게 해준다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brew upate, install pyenv, virtualenv&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ brew update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ brew install pyenv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ brew install pyenv-virtualenv&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;.bash_profile &amp;amp; .zshrc 에 문구 추가&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=&amp;quot;$HOME/.pyenv/bin:$PATH&amp;quot;
eval &amp;quot;$(pyenv init -)&amp;quot;
eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;pyenv 사용법&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ pyenv version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pyenv install -list&lt;/code&gt; : 설치할 수 있는 파이썬 리스트&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pyenv install [VERSION]&lt;/code&gt;  : 설치&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pyenv shell [VERSION]&lt;/code&gt; : 해당 버전 실행&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ python -version&lt;/code&gt; : 실행중인 파이썬 버전 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;virtualenv 사용법&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ pyenv virtualenv [VERSION] [VIRTUALENV_NAME]&lt;/code&gt; : 생성&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ virtualenv versions&lt;/code&gt; : 해당 버전 확인&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pyenv activate [VIRTUALENV_NAME]&lt;/code&gt; : 해당 버전 실행&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pyenv deactivate&lt;/code&gt; : 실행중인 버전 종료&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;requirements.txt&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ pip freeze &amp;gt; requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pip list &amp;gt; requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pip install -r requirements.txt&lt;/code&gt; : 다른 사용자가 설치할 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;autoenv 설치 및 세팅&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ brew install autoenv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;.bash_profile(or .zshrc) 에 추가하기&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ source ~/.autoenv/activate.sh&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;또는 .bash_profile , .zshrc 에 &lt;code&gt;$source ~/.commonrc&lt;/code&gt; 를 추가 후&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ vi ~/.commonrc&lt;/code&gt; 를 만든 후&lt;/li&gt;
&lt;li&gt;.commonrc에 &lt;code&gt;source ~/.autoenv/activate.sh&lt;/code&gt;를 추가&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;autoenv 실행하기&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;해당 프로젝트 폴더에 &lt;code&gt;$ vi .env&lt;/code&gt; 생성 후 아래를 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;Activating pyenv for [PROJECT_NAME] Python v.3.5.1&amp;quot;
pyenv activate [PROJECT_NAME]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;이후 해당 폴더에 들어올 때마다 파이썬환경 자동으로 켜짐&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$pyenv deactivate&lt;/code&gt; : 해당 파이썬 환경 종료&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>